{"version":3,"sources":["SidebarOption.jsx","Sidebar.jsx","firebase.jsx","TweetBox.jsx","Post.jsx","Feed.jsx","Widgets.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["SidebarOption","_ref","active","text","Icon","react_default","a","createElement","className","concat","Sidebar","Twitter_default","src_SidebarOption","HomeIcon","SearchIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PermIdentityIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Tweetbox","_useState","useState","_useState2","Object","slicedToArray","tweetMessage","setTweetMessage","_useState3","_useState4","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","Button_Button","onClick","preventDefault","collection","add","displayName","username","verified","image","type","Post","forwardRef","ref","avatar","Avatar_Avatar","VerifiedUser_default","alt","ChatBubbleOutline","fontSize","Repeat_default","Favorite_default","Publish_default","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","src_TweetBox","react_flip_move_es","post","src_Post","key","Widgets","Search_default","index_modern","tweetId","sourceType","screenName","options","height","url","via","App","src_Sidebar","src_Feed","src_Widgets","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.2e262e37.chunk.js","sourcesContent":["import React from 'react'\r\nimport './SidebarOption.css'\r\n\r\nfunction SidebarOption({ active, text, Icon }) {\r\n  return (\r\n    <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\r\n        <Icon></Icon>\r\n        <h2>{text}</h2>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SidebarOption","import React from 'react'\r\nimport './Sidebar.css'\r\nimport TwitterIcon from \"@material-ui/icons/Twitter\"\r\nimport SidebarOption from './SidebarOption'\r\nimport HomeIcon from \"@material-ui/icons/Home\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\"\r\nimport BookmarkBorderIcon from \"@material-ui/icons/MailOutline\"\r\nimport ListAltIcon from \"@material-ui/icons/ListAlt\"\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\"\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\"\r\nimport { Button } from '@mui/material'\r\n \r\nfunction Sidebar() {\r\n  return (\r\n    <div className='sidebar'>\r\n        <TwitterIcon className='sidebar__twitterIcon'></TwitterIcon>\r\n\r\n        <SidebarOption Icon={HomeIcon} text=\"Home\"></SidebarOption>\r\n        <SidebarOption Icon={SearchIcon} text=\"Explore\"></SidebarOption>\r\n        <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\"></SidebarOption>\r\n        <SidebarOption Icon={MailOutlineIcon} text=\"Messages\"></SidebarOption>\r\n        <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\"></SidebarOption>\r\n        <SidebarOption Icon={ListAltIcon} text=\"Lists\"></SidebarOption>\r\n        <SidebarOption Icon={PermIdentityIcon} text=\"Profile\"></SidebarOption>\r\n        <SidebarOption Icon={MoreHorizIcon} text=\"More\"></SidebarOption>\r\n\r\n        <Button variant='outlined' className='sidebar__tweet' fullWidth>Tweet</Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar","import firebase from \"firebase/compat/app\";\r\nimport 'firebase/compat/firestore'\r\nimport 'firebase/compat/auth'\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDBwTfAsxbcDSof2K7gIxA2yGrVu6YWR70\",\r\n    authDomain: \"twitter-clone-81424.firebaseapp.com\",\r\n    projectId: \"twitter-clone-81424\",\r\n    storageBucket: \"twitter-clone-81424.appspot.com\",\r\n    messagingSenderId: \"354619449930\",\r\n    appId: \"1:354619449930:web:047c5a3c0a3d9198f0fcb3\",\r\n    measurementId: \"G-YNSPS4NSZ4\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  export default db;","import React, { useState } from 'react'\r\nimport './TweetBox.css'\r\nimport { Avatar, Button } from \"@material-ui/core\"\r\nimport db from './firebase'\r\n\r\nfunction Tweetbox() {\r\n    const [tweetMessage, setTweetMessage] = useState('');\r\n    const [tweetImage, setTweetImage] = useState('');\r\n\r\n    const sendTweet = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection ('posts').add({\r\n            displayName: 'Jayden Dollente',\r\n            username: 'dollente.jayden',\r\n            verified: true,\r\n            text: tweetMessage,\r\n            image: tweetImage,\r\n            // avatar\r\n        });\r\n        \r\n        setTweetMessage(\"\");\r\n        setTweetImage(\"\");\r\n    };\r\n\r\n  return (\r\n    <div className='tweetBox'>\r\n        <form>\r\n            <div className=\"tweetBox__input\">\r\n            <Avatar src='image.png'></Avatar>\r\n            <input onChange={e => setTweetMessage(e.target.value)} value={tweetMessage} placeholder=\"What's happening?\" />\r\n            </div>\r\n            <input onChange={e => setTweetImage(e.target.value)} className='tweetBox__imageInput' placeholder=\"Optional: Enter image URL\" />\r\n            <Button onClick={sendTweet} type=\"submit\" className='tweetBox__tweetButton'>Tweet</Button>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tweetbox","import React, { forwardRef } from 'react'\r\nimport { Avatar } from '@mui/material'\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\"\r\nimport './Post.css'\r\nimport { ChatBubbleOutline } from '@material-ui/icons'\r\nimport RepeatIcon from \"@material-ui/icons/Repeat\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/Favorite\"\r\nimport PublishIcon from \"@material-ui/icons/Publish\"\r\n\r\n\r\nconst Post = forwardRef(({\r\n    displayName,\r\n    username,\r\n    verified,\r\n    text,\r\n    image,\r\n    avatar\r\n}, ref) =>\r\n\r\n{\r\n    return (\r\n        <div className='post' ref={ref}>\r\n            <div className=\"post__avatar\">\r\n                <Avatar src={avatar}></Avatar>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <div className=\"post__header\">\r\n                    <div className=\"post__headerText\">\r\n                        <h3>\r\n                            {displayName}{\" \"}\r\n                            <span>\r\n                                {verified && <VerifiedUserIcon className=\"post__badge\" />}\r\n                                @{username}\r\n                            </span>\r\n                        </h3>\r\n                    </div>\r\n                    <div className=\"post__headerDescription\">\r\n                        <p>{text}</p>\r\n                    </div>\r\n                </div>\r\n                <img src={image} alt=\"\" />\r\n                <div className=\"post__footer\">\r\n                    <ChatBubbleOutline fontSize=\"small\" />\r\n                    <RepeatIcon fontSize=\"small\" />\r\n                    <FavoriteBorderIcon fontSize=\"small\" />\r\n                    <PublishIcon fontSize=\"small\" />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Post","import React, { useState, useEffect } from 'react'\r\nimport TweetBox from './TweetBox'\r\nimport Post from './Post'\r\nimport './Feed.css'\r\nimport db from './firebase';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction Feed() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection('posts').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className='feed__header'>\r\n                <h2>Home</h2>\r\n            </div>\r\n\r\n            <TweetBox></TweetBox>\r\n            <FlipMove>\r\n                {posts.map(post => (\r\n                    <Post\r\n                    key={post.text}\r\n                        displayName={post.displayName}\r\n                        username={post.username}\r\n                        verified={post.verified}\r\n                        text={post.text}\r\n                        avatar={post.avatar}\r\n                        image={post.image}></Post>\r\n                ))}\r\n            </FlipMove>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed","import React from 'react'\r\nimport './Widgets.css'\r\nimport {\r\n    TwitterTimelineEmbed,\r\n    TwitterShareButton,\r\n    TwitterTweetEmbed,\r\n} from \"react-twitter-embed\";\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\n\r\nfunction Widgets() {\r\n    return (\r\n        <div className='widgets'>\r\n            <div className=\"widgets__input\">\r\n                <SearchIcon className=\"widgets__searchIcon\" />\r\n                <input placeholder=\"Search Twitter\" type=\"text\" />\r\n            </div>\r\n            <div className=\"widgets__widgetContainer\">\r\n                <h2>What's happening</h2>\r\n\r\n                <TwitterTweetEmbed tweetId={\"858551177860055040\"} />\r\n                <TwitterTimelineEmbed\r\n                    sourceType='profile'\r\n                    screenName='cleverqazi'\r\n                    options={{ height: 400 }}\r\n                />\r\n\r\n                <TwitterShareButton \r\n                url={\"https://facebook.com/cleverprogrammer\"}\r\n                options={{ text: \"#reactjs is awesome\", via: \"cleverqazi\" }}\r\n                />\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Widgets","import React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Widgets from './Widgets';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Sidebar></Sidebar>\n      <Feed></Feed>\n      <Widgets></Widgets>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}